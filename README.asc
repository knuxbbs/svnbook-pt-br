= Controle de Vers√£o com Subversion
:toc: macro

toc::[]

== HOW-TO:  Compiling the Subversion Book

This Subversion Book is written in DocBook 4.4.

The goal of this document is to give simple instructions to anyone who
wants to compile this book into a useful format, like HTML or PDF.  It
should state *exactly* which tools to use, and how to invoke them, in
simplest terms.

=== I. PRIMER

DocBook has a tortured, confusing history. Before you do anything,
take a look at Eric Raymond's excellent http://tldp.org/HOWTO/DocBook-Demystification-HOWTO/[DocBook Demystification HOWTO]. It's very short and clears up many things.


=== II. COMPILING THE DOCS


==== 1. Fetch XSL stylesheets for DocBook and place them in src/tools/xsl.

Download the latest version of https://github.com/docbook/xslt10-stylesheets[docbook-xsl], unpack it, then rename
the unpacked directory to `src/tools/xsl`, something like this:

      $ cd src/tools
      $ tar zxvf docbook-xsl-X.YY.Z.tar.gz
      $ mv docbook-xsl-X.YY.Z xsl

The default build process expects to the stylesheets to be in
`src/tools/xsl/`.

==== 2. Use XSLT to transform the book.
[.lead]
XSLT applies an .xsl stylesheet to an .xml file, and produces some
new markup document.

Get *libxslt*, a C library for XSLT, from http://xmlsoft.org/XSLT/.
(If you're having trouble finding a source package to compile,
try https://github.com/GNOME/libxslt.)
Install it:

        $ tar zxvf libxslt-1.0.22.tar.gz
        $ cd libxslt-1.0.22
        $ ./configure
        $ ./make
        # make install

From this directory (en, or another language directory), do 

        $ make all-html

This produces a single-page HTML version of the book in
`book/svn-book.html`, and a multi-page version in `book/html-chunk/`.

NOTE: You may discover that you need to install *libxml2* first.
Find it at https://github.com/GNOME/libxml2

NOTE: If you don't want to compile libxslt, you can just fetch the
appropriate OS binary package.
         
==== 3. Make a PDF file.
[.lead]
Formatting Objects (FO) is a layout language, kind of like
postscript, dvi or css.  People are quickly standardizing on it.

Fetch http://xml.apache.org/fop/index.html[FOP], a java program which converts .fo files into PDF.

There are approximately 17577 ways to install FOP.  Rather than
describe them all, we will recommend one way.  If you've already
installed FOP some other way, that's fine, then you can ignore
the following recipe:

        1. Download the latest version from 
           http://www.apache.org/dyn/closer.cgi/xml/fop, for example,
           `fop-0.20.5-bin.tar.gz`.  Just get a binary distribution,
           there's no need for the Java source.

        2. Unpack it into `src/tools/fop/`

           $ cd src/tools
           $ tar zxvf fop-0.20.5-bin.tar.gz
           $ mv fop-0.20.5 fop

That should be enough.  The Makefile will actually invoke
`src/tools/bin/run-fop.sh`.  That script attempts to find FOP already
installed on your system, but falls back to the FOP unpacked into
`src/tools/fop/` if there's no other FOP available.

Of course, to run FOP at all, you also need a Java runtime
environment.  Try https://www.java.com if you don't
already have that.

From this directory (en, or another language directory), do 

        $ make all-pdf

This produces PDF for the book in `book/svn-book.pdf`.

=== III. HACKING ON THE DOCS

In addition to everything in section II:


==== 1. Get a nice editing environment for SGML/XML.

This isn't strictly required, but it's nice when your editor
colorizes things, understands the DTD, tells you what tags you can
insert, etc.

* If you use emacs, we recommend the http://www.lysator.liu.se/projects/about_psgml.html[PSGML major-mode].  Most free
operating systems package it.

* If you use vim, you might check out http://www.vim.org/scripts/script.php?script_id=301[xmledit].

==== 2. Get a validating parser.

Actually, if you have what you need to compile the documentation,
then you almost certainly have an XML validator installed already -
it is called xmllint, and comes as part of libxml2.

The makefile is preconfigured with a suitable invocation of it,
so simply run:
   
      $ make valid


==== 3. Read about DocBook.

You'll want to get real intimate with a DocBook reference, such as
can be found at:  http://www.docbook.org/tdg/en/html/